msc {
    arcgradient=30, wordwraparcs=1;

    c [label="Client"], s [label="Server"];

    |||;
    c note c [label="State: Connecting"];
    c => s [label="[Login]\nInt32 versionMajor\nInt32 versionMinor\nString login (\"yalap_a\")"];
    c note c [label="State: LoggingIn"];
    s >> s [label="Login ok"];
    s => c [label="[LoggedIn]\nbool status (true)\nInt32 versionMajor\nInt32 versionMinor\nUint32 clientId\nString worldIdentifier\nString worldName\nUint32 worldVersion\nUint16 nbCubeTypes\nUint32 nbBodyTypes\nString worldBuildHash"];
    c >> c [label="new Game::Game(...);\nFetch database"];
    c note c [label="State: LoadingResources"];
    c => s [label="[GetNeededResourceIds]\nUint32 cacheVersion"];
    s => c [label="[NeededResourceIds]\nUint32 totalIds\nUint32 resourceId\n(more resourceIds)"];
    s => c [label="[NeededResourceIds]\nUint32 totalIds\nUint32 resourceId\n(more resourceIds)"];
    --- [label="Beginning of resource"];
    c => s [label="[GetResourceRange]\nUint32 resourceId\nUint32 offset (0)"];
    s => c [label="[ResourceRange]\nUint32 resourceId\nUint32 offset (0)\nString type\nString filename\nUint32 totalSize\n(raw data)"];
    --- [label="Arbitrary range of resource"];
    c => s [label="[GetResourceRange]\nUint32 resourceId\nUint32 offset"];
    s => c [label="[ResourceRange]\nUint32 resourceId\nUint32 offset\n(raw data)"];
    ---;
    c note c [label="State: WaitingPosition"];
    c => s [label="[Settings]\nUint32 viewDistance\nString playerName"];
    c >> c [label="Load resources"];
    s >> s [label="Spawn player"];
    s => c [label="[TeleportPlayer]\nString map\nPosition pos"];
    c note c [label="State: LoadingChunks"];
    c => s [label="[NeedChunks]\nUint64 chunkId\n(more chunkIds)"];
    s => c [label="[Chunk]\nChunk chunk"];
    s => c [label="[Chunk]\nChunk chunk"];
    c note c [label="State: Running"];
    c => s [label="[TeleportOk]"];
    --- [label="Player movement"];
    c => s [label="[Move] (UDP)\nMovingOrientedPosition pos"];
    --- [label="New doodad"];
    s => c [label="[DoodadSpawn]\nUint32 doodadId\nUint32 entityId\nString doodadName\nNode position\nUint32 bodyId\nString serializedLuaKey\nString serializedLuaValue\n(more key-value pairs)"];
    --- [label="Player action"];
    c => s [label="[Action] (UDP)\nOrientedPosition pos\nCubePosition target\nUint32 actionId"];
    --- [label="Getting new chunks"];
    c => s [label="[NeedChunks]\nUint64 chunkId\n(more chunkIds)"];
    s => c [label="[Chunk]\nChunk chunk"];
    s => c [label="[Chunk]\nChunk chunk"];
    ---;
    c note c [label="State: Disconnected"];
}

